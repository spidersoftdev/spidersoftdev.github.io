<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>api on SpiderSoft</title><link>http://www.spidersoft.com.au/tags/api/</link><description>Recent content in api on SpiderSoft</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 11 May 2015 06:45:01 +0000</lastBuildDate><atom:link href="http://www.spidersoft.com.au/tags/api/index.xml" rel="self" type="application/rss+xml"/><item><title>Useful libraries for SWIFT beginners</title><link>http://www.spidersoft.com.au/2015/useful-libraries-for-swift-beginners/</link><pubDate>Mon, 11 May 2015 06:45:01 +0000</pubDate><guid>http://www.spidersoft.com.au/2015/useful-libraries-for-swift-beginners/</guid><description>&lt;p>Recently we started working with
&lt;a href="https://developer.apple.com/swift/">Apple Swift&lt;/a>
language. It’s pretty simple but very power full language. Learning curve is hard – because it’s pretty new language, but from the other hand it’s good – because there is a lot of freshmen questions on StackOverflow and plenty of articles .&lt;/p>
&lt;p>Because most of the stuff is related with REST communication with APIs core of my software works with JSON objects. In general we are looking also something for HTTP communication, uploading files and so on.&lt;/p></description></item><item><title>How to test and capture REST API calls</title><link>http://www.spidersoft.com.au/2014/how-to-test-test-and-capture-rest-api-calls/</link><pubDate>Wed, 24 Sep 2014 03:21:37 +0000</pubDate><guid>http://www.spidersoft.com.au/2014/how-to-test-test-and-capture-rest-api-calls/</guid><description>Just bunch of very useful tools to help us with testing and building REST API.
requestb.in – just bin for your API calls. Very easy to capture and test calls from APPS
www.runscope.com – older brother, or actually mother of requestb.in – full featured serivce to test APIs</description></item><item><title>Phalcon – super simple REST API example</title><link>http://www.spidersoft.com.au/2014/phalcon-simple-rest-api-example/</link><pubDate>Thu, 10 Jul 2014 04:24:38 +0000</pubDate><guid>http://www.spidersoft.com.au/2014/phalcon-simple-rest-api-example/</guid><description>&lt;p>Throughout this first tutorial, i’ll walk you through the creation of an application with a simple REST API from the ground up. I assume you have
&lt;a href="http://phalconphp.com/en/">Phalcon&lt;/a>
. installed already.&lt;/p></description></item><item><title>Send and receive emails via API</title><link>http://www.spidersoft.com.au/2013/send-and-receive-emails-via-api/</link><pubDate>Mon, 25 Mar 2013 03:39:56 +0000</pubDate><guid>http://www.spidersoft.com.au/2013/send-and-receive-emails-via-api/</guid><description>&lt;p>It’s coming with experience. On the beginning you always trying to do everything by your self. No frameworks, no libraries – bare bone solutions written from the scratch. Later – you realising than your time is to expensive, and start using some libraries. After another period of time you are getting to the point, that you are willing to use as many existing solutions as it’s possible.&lt;/p>
&lt;p>Really typical problem – sending and receiving emails from the apps. Of course – you can send emails using simple
&lt;a href="http://www.php.net/manual/en/function.mail.php" title="PHP mail">mail&lt;/a>
() command or using more sophisticated libraries like
&lt;a href="http://swiftmailer.org/">Swiftmailer&lt;/a>
but… if there is an option to use API, you can chose from couples:&lt;/p></description></item><item><title>Collection of Knockout.js tutorials</title><link>http://www.spidersoft.com.au/2012/collection-of-knockout-js-tutorials/</link><pubDate>Wed, 30 May 2012 01:08:12 +0000</pubDate><guid>http://www.spidersoft.com.au/2012/collection-of-knockout-js-tutorials/</guid><description>&lt;p>&lt;!-- raw HTML omitted -->Knockout.js&lt;!-- raw HTML omitted --> is a JavaScript library that helps you to create rich, responsive display and editor user interfaces with a clean underlying data model. Any time you have sections of UI that update dynamically (e.g., changing depending on the user’s actions or when an external data source changes), KO can help you implement it more simply and maintainably.&lt;/p></description></item><item><title>Collection of Backbone.js tutorials</title><link>http://www.spidersoft.com.au/2012/collection-of-backbone-js-tutorials/</link><pubDate>Wed, 30 May 2012 00:38:06 +0000</pubDate><guid>http://www.spidersoft.com.au/2012/collection-of-backbone-js-tutorials/</guid><description>&lt;p>Backbone.js gives structure to web applications by providing models with key-value binding and custom events, collections with a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing API over a RESTful JSON interface.&lt;/p></description></item></channel></rss>