<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Context on SpiderSoft</title><link>https://www.spidersoft.com.au/tags/context/</link><description>Recent content in Context on SpiderSoft</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 29 Jul 2022 08:30:00 +0000</lastBuildDate><atom:link href="https://www.spidersoft.com.au/tags/context/index.xml" rel="self" type="application/rss+xml"/><item><title>How to implement timeout in go routines</title><link>https://www.spidersoft.com.au/2022/go-lang-simple-workers-with-timeout-using-context/</link><pubDate>Fri, 29 Jul 2022 08:30:00 +0000</pubDate><guid>https://www.spidersoft.com.au/2022/go-lang-simple-workers-with-timeout-using-context/</guid><description>&lt;p>I wanted to implement a timeout in go routines. There are a couple o ways doing that. We could use &lt;code>context.WithTimeout()&lt;/code> or we go with classical &lt;code>sync.WaitGroup&lt;/code> group with a trick.&lt;/p>
&lt;p>Let&amp;rsquo;s start with the first one.&lt;/p></description></item></channel></rss>